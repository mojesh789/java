                                                                       FEATURES OF JAVA
Java is an Object-Oriented Programming language. It was developed by James Gosling in collaboration with Mike Sheridan, and Patrick Naughton in the year 1995. Following are the main features of the Java language. 

→Simple 
→Object Oriented 
→Portable 
→Platform independent 
→Secure 
→ Architecture neutral 
→Dynamic 
→Interpreted  
→High Performance 
→Distributed 
→Multithreading


SIMPLE: 
Java is user-friendly. 
Its syntax is clear and concise making it suitable for both aspiring programmers and experienced professionals. 
It inherits many features from C, C++ and removes complex features like pointers, operator overloading, multiple inheritance, explicit memory allocation etc.… 
OBJECT ORIENTED: 
→Java is an Object-Oriented Programming language. 
→Everything in JAVA is an Object, Object is a real world entity. 
→Java supports Fundamental concepts of OOPs- 
	Object 
	Class 
	Inheritance 
	Polymorphism 
	Abstraction 
	Encapsulation 

PORTABLE: 
→ Java is portable because it facilitates you to carry the Java bytecode to any platform. It doesn't require any implementation.

PLATFORM INDEPENDENT: 
          Unlike other languages, Java is not limited to any specific machine and dependent on other factors to run. The Java platform is independent because: 
→It uses a runtime environment of its own, i.e. JVM. 
→ It is a write-once, run-anywhere language. 
→ It is a software-based platform that runs on top of other hardware-based platforms. 

SECURE: 
→Java is better known for its security, Java is secured because: 
→No explicit Pointer 
→Java runs inside a virtual machine (JVM) 
→In Java run time, a class loader separates the package for the classes of the local file system from the files imported from network sources. 
→ Java also consists of Bytecode Verifier, which checks the code fragments for illegal code. 

ARCHITECTURE NUETRAL:
 → It can run on any platform or operating system without requiring code modifications.
→ This is possible because Java compiles code into an intermediate representation called bytecode, which can run on any platform with a Java Virtual Machine (JVM). 
DYNAMIC: 
→ Java is a dynamic language. It supports the dynamic loading of classes. It means classes are loaded on demand. It also supports functions from its native languages, i.e., C and C++. 
→Java supports dynamic compilation and automatic memory management (garbage collection). 
INTERPRETED: 
→The source code is first compiled into bytecode by the Java compiler. 
→Then this bytecode is interpreted by the JVM when the program runs. 
HIGH PERFORMANCE: 
→ Java is faster than other traditional interpreted programming languages because Java bytecode is "close" to native code. 
→ It is still a little bit slower than a compiled language (e.g., C++). 
→Java is an interpreted language that is why it is slower than compiled languages, e.g., C, C++, etc. 
DISTRIBUTED: 
→Java provides the network facility. i.e. programs can be access remotely from any machine on the network rather than writing program on the local machine. 
→HTTP and FTP protocols are developed in java.	

MULTITHREADING: 
→Java provides multitasking facility with the help of lightweight processes called threads.
→ A programming concept in which the application can create a small unit of tasks to execute in parallel
